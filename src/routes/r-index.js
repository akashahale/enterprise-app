const express = require('express');
const app = express();
const authenticateJWT=require('../middleware/authMiddleware');
const schemaValidation=require('../middleware/validationMiddleware');
const UserController = require('../controllers/userController');
const RoleController=require('../controllers/roleController');
const PermissionController=require('../controllers/permissionController');
const EnterpriseController=require('../controllers/enterpriseController');
const passwordPolicyController=require('../controllers/password_policyController');
const authController=require('../controllers/authController');
app.post("/idm/api/users",schemaValidation.createUserValidation,UserController.createUser);
app.get("/idm/api/users/list",authenticateJWT.authenticateJWT,UserController.listUsers);
app.get("/idm/api/users",UserController.getLoggedInUserDetails);
app.delete("/idm/api/users/:id",authenticateJWT.authenticateJWT,UserController.deleteUser);
app.put("/idm/api/users/activate/:id",authenticateJWT.authenticateJWT,UserController.activateUser);
app.put("/idm/api/users/suspend/:id",authenticateJWT.authenticateJWT,UserController.suspendUser);
app.post("/idm/api/roles",authenticateJWT.authenticateJWT,schemaValidation.RoleValidation,RoleController.createRole);
app.get("/idm/api/roles",authenticateJWT.authenticateJWT,RoleController.getRoles);
app.get("/idm/api/roles/:role_id",authenticateJWT.authenticateJWT,RoleController.getRoleById);
app.put("/idm/api/roles",authenticateJWT.authenticateJWT,schemaValidation.RoleValidation,RoleController.updateRole);
app.delete("/idm/api/roles/:role_id",authenticateJWT.authenticateJWT,RoleController.deleteRoleById);
app.get('/idm/api/permissions',authenticateJWT.authenticateJWT,PermissionController.listPermisions);
app.get('/idm/api/permissions/search?',authenticateJWT.authenticateJWT,PermissionController.getPermissionsByFeature);
app.post('/idm/api/enterprises',authenticateJWT.authenticateJWT,EnterpriseController.createEnterprise);
app.post('/idm/api/enterprises/root',schemaValidation.enterpriseValidation,EnterpriseController.createEnterprise);
app.get('/idm/api/enterprises',EnterpriseController.getEnterpriseDetails);
app.delete('/idm/api/enterprises/:id',EnterpriseController.deleteEnterprise);
app.post('/idm/api/passwordpolicies',authenticateJWT.authenticateJWT,schemaValidation.passwordPolicyValidation,passwordPolicyController.createPasswordPolicy);
app.get('/idm/api/passwordpolicies',authenticateJWT.authenticateJWT,passwordPolicyController.getPasswordPolicies);
app.put('/idm/api/passwordpolicies/:id',authenticateJWT.authenticateJWT,schemaValidation.passwordPolicyValidation,passwordPolicyController.updatePasswordPolicy);
app.put('/idm/api/passwordpolicies/:id/activate',authenticateJWT.authenticateJWT,passwordPolicyController.activatePasswordPolicy);
app.put('/idm/api/passwordpolicies/:id/deactivate',authenticateJWT.authenticateJWT,passwordPolicyController.deactivatePasswordPolicy);
app.delete('/idm/api/passwordpolicies/:id',authenticateJWT.authenticateJWT,passwordPolicyController.deletePasswordPolicy);
app.post("/idm/api/users/activation?",schemaValidation.activateUserValidation,UserController.activateUserByToken);
app.post("/idm/api/users/passswd/change",authenticateJWT.authenticateJWT,schemaValidation.changePasswordValidation,UserController.changPassword);
app.post("/idm/api/users/forgotpassword",schemaValidation.forgotPasswordValidation,UserController.forgotPassword);
app.put("/idm/api/enterprises/:id/suspend",EnterpriseController.suspendEnterprise);
app.put("/idm/api/enterprises/:id/activate",EnterpriseController.activateEnterprise);
app.post('/idm/api/login',schemaValidation.userAuthValidation,authController.login);
app.post('/idm/api/logout',authenticateJWT.authenticateJWT,authController.logout);
app.post('/idm/api/token',authController.getToken);
app.post('/idm/api/auth/salt',schemaValidation.saltValidation,authController.getSalt);
app.get('/idm/api/users/activationkey/:id',UserController.getActivationKey);
module.exports = app;